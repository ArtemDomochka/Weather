{"ast":null,"code":"var _jsxFileName = \"/home/alucard/VSProjects/weather/src/components/HoursBar.js\";\nimport React from 'react';\nimport styles from './HoursBar.module.css';\n\nconst HoursBar = props => {\n  let forecast = [];\n\n  if (props.activeDay === 0) {\n    forecast = props.forecast.hourly.today;\n  } else if (props.activeDay === 1) {\n    forecast = props.forecast.hourly.tomorrow;\n  } else if (props.activeDay === 2) {\n    forecast = props.forecast.hourly.afterDay;\n  } else {\n    forecast = null;\n  }\n\n  const dayCells = [];\n  const nightCells = [];\n\n  if (forecast) {\n    for (let i = 0; i < 12; i++) {\n      dayCells.push( /*#__PURE__*/React.createElement(\"td\", {\n        key: i,\n        className: styles.Hour,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, forecast[i] ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 27\n        }\n      }, i, \":00\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }\n      }), forecast[i].temp.toFixed(0), \" C\") : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 27\n        }\n      }, i, \":00\")));\n    }\n\n    for (let i = 12; i < 24; i++) {\n      nightCells.push( /*#__PURE__*/React.createElement(\"td\", {\n        key: i,\n        className: styles.Hour,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, forecast[i] ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 27\n        }\n      }, i, \":00\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }\n      }), forecast[i].temp.toFixed(0), \" C\") : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 27\n        }\n      }, i, \":00\")));\n    }\n  }\n\n  return forecast ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.HoursBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: styles.Table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, dayCells), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, nightCells)))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.HoursBarHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Hourly forecast is not avaible for now\"));\n};\n\nexport default HoursBar;","map":{"version":3,"sources":["/home/alucard/VSProjects/weather/src/components/HoursBar.js"],"names":["React","styles","HoursBar","props","forecast","activeDay","hourly","today","tomorrow","afterDay","dayCells","nightCells","i","push","Hour","temp","toFixed","Table","HoursBarHidden"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styles from './HoursBar.module.css'\n\nconst HoursBar = props => {\n\n\n    let forecast = []\n\n    if(props.activeDay === 0){\n        forecast=props.forecast.hourly.today\n    }else if(props.activeDay === 1){\n        forecast=props.forecast.hourly.tomorrow\n    }else if(props.activeDay === 2){\n        forecast=props.forecast.hourly.afterDay\n    }else{\n        forecast=null\n    }\n\n    const dayCells = []\n    const nightCells = []\n\n    if(forecast){\n        \n        for(let i = 0; i < 12; i++){\n            dayCells.push(\n                <td key={i} className={styles.Hour}>\n                    {\n                        forecast[i]\n                        ? <div>\n                            {i}:00\n                            <br/>\n                            {forecast[i].temp.toFixed(0)} C\n                        </div> \n                        : <div>\n                            {i}:00\n                        </div>\n                    }\n                </td>\n            )\n        }\n\n        for(let i = 12; i < 24; i++){\n            nightCells.push(\n                <td key={i} className={styles.Hour}>\n                    {\n                        forecast[i]\n                        ? <div>\n                            {i}:00\n                            <br/>\n                            {forecast[i].temp.toFixed(0)} C\n                          </div>\n                        : <div>\n                            {i}:00\n                          </div> \n                        \n                    }\n                </td>\n            )\n        }\n\n    }\n    \n    \n    \n    \n    \n\n\n    return(\n        forecast\n        ? <div className={styles.HoursBar}>\n            <table className={styles.Table}>\n                <tbody>\n                <tr>\n                    {dayCells}\n                </tr>\n                <tr>\n                    {nightCells}\n                </tr>\n                </tbody>\n            </table>\n         </div>\n        : <div className={styles.HoursBarHidden}>\n            <h2>Hourly forecast is not avaible for now</h2>\n          </div>\n        \n        \n    )\n    \n}\n\nexport default HoursBar"]},"metadata":{},"sourceType":"module"}