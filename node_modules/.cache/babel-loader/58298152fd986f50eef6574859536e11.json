{"ast":null,"code":"var _jsxFileName = \"/home/alucard/VSProjects/weather/src/components/WeatherBoard.js\";\nimport React from 'react';\nimport styles from \"./WeatherBoard.module.css\";\nimport HoursBar from './HoursBar';\nimport MainBoard from './MainBoard';\nimport DaysBar from './DaysBar';\n\nclass WeatherBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      activeBoard: \"hourly\",\n      activeDay: 0,\n      activeHour: 0,\n      forecast: null\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const lat = '48.450001';\n      const lon = '34.983334';\n      const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&exclude=minutely&appid=28fac3f57b86f68e027fe7277b3bf432`;\n      let response = await fetch(url);\n\n      if (response.ok) {\n        const forecast = await response.json();\n        this.setState({\n          forecast: forecast,\n          isLoaded: true\n        });\n      } else {\n        console.log(Error);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return this.state.isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.WeatherBoard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MainBoard, {\n      forecast: this.state.forecast,\n      activeBoard: this.state.activeBoard,\n      activeDay: this.state.activeDay,\n      activeHour: this.state.activeHour,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(HoursBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(DaysBar, {\n      days: this.state.forecast.daily,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    })) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, \"loading forecast\");\n  }\n\n}\n\nexport default WeatherBoard;","map":{"version":3,"sources":["/home/alucard/VSProjects/weather/src/components/WeatherBoard.js"],"names":["React","styles","HoursBar","MainBoard","DaysBar","WeatherBoard","Component","constructor","props","state","isLoaded","activeBoard","activeDay","activeHour","forecast","componentDidMount","lat","lon","url","response","fetch","ok","json","setState","console","log","Error","e","render","daily"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAG,KADF;AAETC,MAAAA,WAAW,EAAG,QAFL;AAGTC,MAAAA,SAAS,EAAG,CAHH;AAITC,MAAAA,UAAU,EAAG,CAJJ;AAKTC,MAAAA,QAAQ,EAAG;AALF,KAAb;AAOH;;AAED,QAAMC,iBAAN,GAAyB;AACrB,QAAG;AACC,YAAMC,GAAG,GAAG,WAAZ;AACA,YAAMC,GAAG,GAAG,WAAZ;AACA,YAAMC,GAAG,GAAI,uDAAsDF,GAAI,QAAOC,GAAI,uEAAlF;AACA,UAAIE,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA1B;;AACA,UAAGC,QAAQ,CAACE,EAAZ,EAAe;AACX,cAAMP,QAAQ,GAAG,MAAMK,QAAQ,CAACG,IAAT,EAAvB;AACA,aAAKC,QAAL,CAAc;AACVT,UAAAA,QAAQ,EAAGA,QADD;AAEVJ,UAAAA,QAAQ,EAAG;AAFD,SAAd;AAIH,OAND,MAMK;AACDc,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;AAEJ,KAfD,CAeC,OAAMC,CAAN,EAAQ;AACLH,MAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACH;AACJ;;AAIDC,EAAAA,MAAM,GAAE;AACJ,WACI,KAAKnB,KAAL,CAAWC,QAAX,gBACE;AAAK,MAAA,SAAS,EAAET,MAAM,CAACI,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACI,MAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWK,QADzB;AAEI,MAAA,WAAW,EAAE,KAAKL,KAAL,CAAWE,WAF5B;AAGI,MAAA,SAAS,EAAE,KAAKF,KAAL,CAAWG,SAH1B;AAII,MAAA,UAAU,EAAE,KAAKH,KAAL,CAAWI,UAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAQE,oBAAC,OAAD;AACI,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWK,QAAX,CAAoBe,KAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF,gBAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAdN;AAgBH;;AApDqC;;AAwD1C,eAAexB,YAAf","sourcesContent":["import React from 'react'\nimport styles from \"./WeatherBoard.module.css\"\nimport HoursBar from './HoursBar'\nimport MainBoard from './MainBoard'\nimport DaysBar from './DaysBar'\n\nclass WeatherBoard extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            isLoaded : false,\n            activeBoard : \"hourly\",\n            activeDay : 0,\n            activeHour : 0,\n            forecast : null,\n        }\n    }\n\n    async componentDidMount(){\n        try{\n            const lat = '48.450001'\n            const lon = '34.983334'\n            const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&exclude=minutely&appid=28fac3f57b86f68e027fe7277b3bf432`\n            let response = await fetch(url)\n            if(response.ok){\n                const forecast = await response.json()\n                this.setState({\n                    forecast : forecast,\n                    isLoaded : true, \n                })\n            }else{\n                console.log(Error);\n            }\n\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n\n\n    render(){\n        return(\n            this.state.isLoaded\n            ? <div className={styles.WeatherBoard}>\n                <MainBoard\n                    forecast={this.state.forecast}\n                    activeBoard={this.state.activeBoard}\n                    activeDay={this.state.activeDay}\n                    activeHour={this.state.activeHour}\n                />\n                <HoursBar/>\n                <DaysBar\n                    days={this.state.forecast.daily}\n                />\n            </div> \n            : <p>loading forecast</p>\n        )\n    }\n\n}\n\nexport default WeatherBoard\n"]},"metadata":{},"sourceType":"module"}