{"ast":null,"code":"var _jsxFileName = \"/home/alucard/VSProjects/weather/src/components/WeatherBoard.js\";\nimport React from 'react';\nimport styles from \"./WeatherBoard.module.css\";\nimport HoursBar from './HoursBar';\nimport MainBoard from './MainBoard';\nimport DaysBar from './DaysBar';\n\nclass WeatherBoard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDayClick = dayIndex => {\n      this.setState({\n        activeBoard: 'day',\n        activeDay: dayIndex\n      });\n    };\n\n    this.handleHourClick = hourIndex => {\n      this.setState({\n        activeBoard: 'hour',\n        activeHour: hourIndex\n      });\n    };\n\n    this.state = {\n      isLoaded: false,\n      activeBoard: \"current\",\n      activeDay: 0,\n      forecastToPrint: forecast.current,\n      forecast: null\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const lat = '48.450001';\n      const lon = '34.983334';\n      const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&exclude=minutely&appid=28fac3f57b86f68e027fe7277b3bf432`;\n      let response = await fetch(url);\n\n      if (response.ok) {\n        const forecast = await response.json();\n        this.setState({\n          forecast: forecast,\n          isLoaded: true\n        });\n      } else {\n        console.log(Error);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return this.state.isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.WeatherBoard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MainBoard, {\n      forecast: this.state.forecastToPrint,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(HoursBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(DaysBar, {\n      days: this.state.forecast.daily,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    })) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, \"loading forecast\");\n  }\n\n}\n\nexport default WeatherBoard;","map":{"version":3,"sources":["/home/alucard/VSProjects/weather/src/components/WeatherBoard.js"],"names":["React","styles","HoursBar","MainBoard","DaysBar","WeatherBoard","Component","constructor","props","handleDayClick","dayIndex","setState","activeBoard","activeDay","handleHourClick","hourIndex","activeHour","state","isLoaded","forecastToPrint","forecast","current","componentDidMount","lat","lon","url","response","fetch","ok","json","console","log","Error","e","render","daily"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAkClBC,cAlCkB,GAkCDC,QAAQ,IAAI;AACzB,WAAKC,QAAL,CAAc;AACVC,QAAAA,WAAW,EAAE,KADH;AAEVC,QAAAA,SAAS,EAAEH;AAFD,OAAd;AAIH,KAvCiB;;AAAA,SAyClBI,eAzCkB,GAyCAC,SAAS,IAAI;AAC3B,WAAKJ,QAAL,CAAc;AACVC,QAAAA,WAAW,EAAE,MADH;AAEVI,QAAAA,UAAU,EAAED;AAFF,OAAd;AAIH,KA9CiB;;AAEd,SAAKE,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAG,KADF;AAETN,MAAAA,WAAW,EAAG,SAFL;AAGTC,MAAAA,SAAS,EAAG,CAHH;AAITM,MAAAA,eAAe,EAAEC,QAAQ,CAACC,OAJjB;AAKTD,MAAAA,QAAQ,EAAG;AALF,KAAb;AAOH;;AAID,QAAME,iBAAN,GAAyB;AACrB,QAAG;AACC,YAAMC,GAAG,GAAG,WAAZ;AACA,YAAMC,GAAG,GAAG,WAAZ;AACA,YAAMC,GAAG,GAAI,uDAAsDF,GAAI,QAAOC,GAAI,uEAAlF;AACA,UAAIE,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA1B;;AACA,UAAGC,QAAQ,CAACE,EAAZ,EAAe;AACX,cAAMR,QAAQ,GAAG,MAAMM,QAAQ,CAACG,IAAT,EAAvB;AACA,aAAKlB,QAAL,CAAc;AACVS,UAAAA,QAAQ,EAAGA,QADD;AAEVF,UAAAA,QAAQ,EAAG;AAFD,SAAd;AAIH,OAND,MAMK;AACDY,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;AAEJ,KAfD,CAeC,OAAMC,CAAN,EAAQ;AACLH,MAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACH;AACJ;;AAiBDC,EAAAA,MAAM,GAAE;AACJ,WACI,KAAKjB,KAAL,CAAWC,QAAX,gBACE;AAAK,MAAA,SAAS,EAAEjB,MAAM,CAACI,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACI,MAAA,QAAQ,EAAE,KAAKY,KAAL,CAAWE,eADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,OAAD;AACI,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG,QAAX,CAAoBe,KAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,gBAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAXN;AAaH;;AAhEqC;;AAoE1C,eAAe9B,YAAf","sourcesContent":["import React from 'react'\nimport styles from \"./WeatherBoard.module.css\"\nimport HoursBar from './HoursBar'\nimport MainBoard from './MainBoard'\nimport DaysBar from './DaysBar'\n\nclass WeatherBoard extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            isLoaded : false,\n            activeBoard : \"current\",\n            activeDay : 0,\n            forecastToPrint: forecast.current,\n            forecast : null\n        }\n    }\n\n\n\n    async componentDidMount(){\n        try{\n            const lat = '48.450001'\n            const lon = '34.983334'\n            const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&exclude=minutely&appid=28fac3f57b86f68e027fe7277b3bf432`\n            let response = await fetch(url)\n            if(response.ok){\n                const forecast = await response.json()\n                this.setState({\n                    forecast : forecast,\n                    isLoaded : true  \n                })\n            }else{\n                console.log(Error);\n            }\n\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n    handleDayClick = dayIndex => {\n        this.setState({\n            activeBoard: 'day',\n            activeDay: dayIndex\n        })\n    }\n\n    handleHourClick = hourIndex => {\n        this.setState({\n            activeBoard: 'hour',\n            activeHour: hourIndex\n        })\n    }\n\n\n    render(){\n        return(\n            this.state.isLoaded\n            ? <div className={styles.WeatherBoard}>\n                <MainBoard\n                    forecast={this.state.forecastToPrint}\n                />\n                <HoursBar/>\n                <DaysBar\n                    days={this.state.forecast.daily}\n                />\n            </div> \n            : <p>loading forecast</p>\n        )\n    }\n\n}\n\nexport default WeatherBoard\n"]},"metadata":{},"sourceType":"module"}