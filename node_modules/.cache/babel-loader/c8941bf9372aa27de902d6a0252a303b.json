{"ast":null,"code":"var _jsxFileName = \"/home/artem/VSProjects/Web/weather/src/components/MainBoard.js\";\nimport React from 'react';\nimport styles from './MainBoard.module.css';\nimport HoursBar from './HoursBar';\n\nconst MainBoard = props => {\n  let forecast = props.forecast.daily[props.activeDay];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.MainBoard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, props.activeDay === 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 42\n    }\n  }, \"Today\") : null, props.activeDay === 1 ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 42\n    }\n  }, \"Tomorrow\") : null, props.activeDay === 2 ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 42\n    }\n  }, \"After Day\") : null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, new Date(forecast.dt * 1000).toDateString()), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, forecast.temp.min.toFixed(0), \" to \", forecast.temp.max.toFixed(0), \"C\")), props.isHourlyReady && props.isHourlyRequired ? /*#__PURE__*/React.createElement(HoursBar, {\n    forecast: props.forecast,\n    activeDay: props.activeDay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }\n  }));\n};\n\nexport default MainBoard;","map":{"version":3,"sources":["/home/artem/VSProjects/Web/weather/src/components/MainBoard.js"],"names":["React","styles","HoursBar","MainBoard","props","forecast","daily","activeDay","Date","dt","toDateString","temp","min","toFixed","max","isHourlyReady","isHourlyRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACvB,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAN,CAAeC,KAAf,CAAqBF,KAAK,CAACG,SAA3B,CAAf;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACE,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,KAAK,CAACG,SAAN,KAAoB,CAApB,gBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAxB,GAAyC,IAD9C,EAEKH,KAAK,CAACG,SAAN,KAAoB,CAApB,gBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAxB,GAA4C,IAFjD,EAGKH,KAAK,CAACG,SAAN,KAAoB,CAApB,gBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAxB,GAA6C,IAHlD,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,IAAIC,IAAJ,CAASH,QAAQ,CAACI,EAAT,GAAc,IAAvB,EAA6BC,YAA7B,EAAL,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,QAAQ,CAACM,IAAT,CAAcC,GAAd,CAAkBC,OAAlB,CAA0B,CAA1B,CAAL,UAAuCR,QAAQ,CAACM,IAAT,CAAcG,GAAd,CAAkBD,OAAlB,CAA0B,CAA1B,CAAvC,MALJ,CADJ,EAUQT,KAAK,CAACW,aAAN,IAAuBX,KAAK,CAACY,gBAA7B,gBAEA,oBAAC,QAAD;AACA,IAAA,QAAQ,EAAEZ,KAAK,CAACC,QADhB;AAEA,IAAA,SAAS,EAAED,KAAK,CAACG,SAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,gBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBV,CADJ;AAsBH,CAzBD;;AA2BA,eAAeJ,SAAf","sourcesContent":["import React from 'react'\nimport styles from './MainBoard.module.css'\nimport HoursBar from './HoursBar'\n\nconst MainBoard = props => {\n    let forecast = props.forecast.daily[props.activeDay]\n\n    return(\n        <div className={styles.MainBoard}>\n            <div> \n                {props.activeDay === 0 ? <h1>Today</h1> : null}\n                {props.activeDay === 1 ? <h1>Tomorrow</h1> : null}\n                {props.activeDay === 2 ? <h1>After Day</h1> : null}\n                <h1>{new Date(forecast.dt * 1000).toDateString()}</h1>\n                <h1>{forecast.temp.min.toFixed(0)} to {forecast.temp.max.toFixed(0)}C</h1> \n            </div>\n            \n            {\n                props.isHourlyReady && props.isHourlyRequired\n                ? \n                <HoursBar\n                forecast={props.forecast}\n                activeDay={props.activeDay}\n                />\n                : <div></div>\n            }           \n\n        </div>\n    )\n}\n\nexport default MainBoard"]},"metadata":{},"sourceType":"module"}