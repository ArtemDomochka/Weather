{"ast":null,"code":"var _jsxFileName = \"/home/alucard/VSProjects/weather/src/components/MainBoard.js\";\nimport React from 'react';\nimport styles from './MainBoard.module.css';\n\nconst MainBoard = props => {\n  let forecast = {};\n\n  switch (props.activeBoard) {\n    case \"current\":\n      forecast = props.forecast.current;\n      break;\n\n    case \"hourly\":\n      if (props.hourlyForecastType === \"today\") {\n        forecast = props.forecast.hourly.today[props.activeHour];\n      } else if (props.hourlyForecastType === \"tomorrow\") {\n        forecast = props.forecast.hourly.tomorrow[props.activeHour];\n      } else {\n        forecast = props.forecast.hourly.afterDay[props.activeHour];\n      }\n\n      break;\n\n    case \"daily\":\n      forecast = props.forecast.daily[props.activeDay];\n      break;\n\n    default:\n      forecast = props.forecast.current;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.MainBoard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, props.activeBoard === \"daily\" && props.activeDay === 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 71\n    }\n  }, \"Today\") : null, props.activeBoard === \"daily\" && props.activeDay === 1 ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 71\n    }\n  }, \"Tomorrow\") : null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, new Date(forecast.dt * 1000).toDateString()), props.activeBoard === \"daily\" ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }\n  }, forecast.temp.min.toFixed(0), \" - \", forecast.temp.max.toFixed(0), \"C\") : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }\n  }, forecast.temp.toFixed(0), \"C\"));\n};\n\nexport default MainBoard;","map":{"version":3,"sources":["/home/alucard/VSProjects/weather/src/components/MainBoard.js"],"names":["React","styles","MainBoard","props","forecast","activeBoard","current","hourlyForecastType","hourly","today","activeHour","tomorrow","afterDay","daily","activeDay","Date","dt","toDateString","temp","min","toFixed","max"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACvB,MAAIC,QAAQ,GAAG,EAAf;;AAEA,UAAOD,KAAK,CAACE,WAAb;AACI,SAAK,SAAL;AACID,MAAAA,QAAQ,GAAGD,KAAK,CAACC,QAAN,CAAeE,OAA1B;AACA;;AACJ,SAAK,QAAL;AACI,UAAGH,KAAK,CAACI,kBAAN,KAA6B,OAAhC,EAAwC;AACpCH,QAAAA,QAAQ,GAAGD,KAAK,CAACC,QAAN,CAAeI,MAAf,CAAsBC,KAAtB,CAA4BN,KAAK,CAACO,UAAlC,CAAX;AACH,OAFD,MAEM,IAAGP,KAAK,CAACI,kBAAN,KAA6B,UAAhC,EAA2C;AAC7CH,QAAAA,QAAQ,GAAGD,KAAK,CAACC,QAAN,CAAeI,MAAf,CAAsBG,QAAtB,CAA+BR,KAAK,CAACO,UAArC,CAAX;AACH,OAFK,MAED;AACDN,QAAAA,QAAQ,GAAGD,KAAK,CAACC,QAAN,CAAeI,MAAf,CAAsBI,QAAtB,CAA+BT,KAAK,CAACO,UAArC,CAAX;AACH;;AACD;;AACJ,SAAK,OAAL;AACIN,MAAAA,QAAQ,GAAGD,KAAK,CAACC,QAAN,CAAeS,KAAf,CAAqBV,KAAK,CAACW,SAA3B,CAAX;AACA;;AACJ;AACIV,MAAAA,QAAQ,GAAGD,KAAK,CAACC,QAAN,CAAeE,OAA1B;AAjBR;;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,KAAK,CAACE,WAAN,KAAsB,OAAtB,IAAiCF,KAAK,CAACW,SAAN,KAAoB,CAArD,gBAAyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAzD,GAA0E,IAD/E,EAEKX,KAAK,CAACE,WAAN,KAAsB,OAAtB,IAAiCF,KAAK,CAACW,SAAN,KAAoB,CAArD,gBAAyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAzD,GAA6E,IAFlF,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,IAAIC,IAAJ,CAASX,QAAQ,CAACY,EAAT,GAAc,IAAvB,EAA6BC,YAA7B,EAAL,CAHJ,EAIKd,KAAK,CAACE,WAAN,KAAsB,OAAtB,gBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,QAAQ,CAACc,IAAT,CAAcC,GAAd,CAAkBC,OAAlB,CAA0B,CAA1B,CAAL,SAAsChB,QAAQ,CAACc,IAAT,CAAcG,GAAd,CAAkBD,OAAlB,CAA0B,CAA1B,CAAtC,MADL,gBAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKhB,QAAQ,CAACc,IAAT,CAAcE,OAAd,CAAsB,CAAtB,CAAL,MANV,CADJ;AAWH,CAlCD;;AAoCA,eAAelB,SAAf","sourcesContent":["import React from 'react'\nimport styles from './MainBoard.module.css'\n\nconst MainBoard = props => {\n    let forecast = {}\n\n    switch(props.activeBoard){\n        case \"current\":\n            forecast = props.forecast.current\n            break\n        case \"hourly\":\n            if(props.hourlyForecastType === \"today\"){\n                forecast = props.forecast.hourly.today[props.activeHour]\n            }else if(props.hourlyForecastType === \"tomorrow\"){\n                forecast = props.forecast.hourly.tomorrow[props.activeHour]\n            }else{\n                forecast = props.forecast.hourly.afterDay[props.activeHour]\n            }\n            break\n        case \"daily\":\n            forecast = props.forecast.daily[props.activeDay]\n            break\n        default:\n            forecast = props.forecast.current\n    }\n\n    return(\n        <div className={styles.MainBoard}>\n            {props.activeBoard === \"daily\" && props.activeDay === 0 ? <h1>Today</h1> : null}\n            {props.activeBoard === \"daily\" && props.activeDay === 1 ? <h1>Tomorrow</h1> : null}\n            <h1>{new Date(forecast.dt * 1000).toDateString()}</h1>\n            {props.activeBoard === \"daily\" \n                ? <h1>{forecast.temp.min.toFixed(0)} - {forecast.temp.max.toFixed(0)}C</h1> \n                : <h1>{forecast.temp.toFixed(0)}C</h1>}\n\n        </div>\n    )\n}\n\nexport default MainBoard"]},"metadata":{},"sourceType":"module"}