{"ast":null,"code":"var _jsxFileName = \"/home/alucard/VSProjects/weather/src/components/HoursBar.js\";\nimport React from 'react';\nimport styles from './HoursBar.module.css';\n\nconst HoursBar = props => {\n  const forecast = [];\n\n  if (props.activeDay === 0) {\n    forecast = props.forecast.today;\n  } else if (props.activeDay === 1) {\n    forecast = props.forecast.tomorrow;\n  } else if (props.activeDay === 2) {\n    forecast = props.forecast.afterDay;\n  } else {\n    forecast = null;\n  }\n\n  const dayCells = [];\n\n  for (let i = 0; i < 12; i++) {\n    dayCells.push( /*#__PURE__*/React.createElement(\"td\", {\n      key: i,\n      className: styles.Hour,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 23\n      }\n    }, hours[i]));\n  }\n\n  const nightCells = [];\n\n  for (let i = 12; i < 24; i++) {\n    nightCells.push( /*#__PURE__*/React.createElement(\"td\", {\n      key: i,\n      className: styles.Hour,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }, hours[i]));\n  }\n\n  return forecast ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.HoursBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: styles.Table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, dayCells), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, nightCells)))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.HoursBarHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Hourly forecast is not avaible for now\"));\n};\n\nexport default HoursBar;","map":{"version":3,"sources":["/home/alucard/VSProjects/weather/src/components/HoursBar.js"],"names":["React","styles","HoursBar","props","forecast","activeDay","today","tomorrow","afterDay","dayCells","i","push","Hour","hours","nightCells","Table","HoursBarHidden"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAGtB,QAAMC,QAAQ,GAAG,EAAjB;;AAEA,MAAGD,KAAK,CAACE,SAAN,KAAoB,CAAvB,EAAyB;AACrBD,IAAAA,QAAQ,GAACD,KAAK,CAACC,QAAN,CAAeE,KAAxB;AACH,GAFD,MAEM,IAAGH,KAAK,CAACE,SAAN,KAAoB,CAAvB,EAAyB;AAC3BD,IAAAA,QAAQ,GAACD,KAAK,CAACC,QAAN,CAAeG,QAAxB;AACH,GAFK,MAEA,IAAGJ,KAAK,CAACE,SAAN,KAAoB,CAAvB,EAAyB;AAC3BD,IAAAA,QAAQ,GAACD,KAAK,CAACC,QAAN,CAAeI,QAAxB;AACH,GAFK,MAED;AACDJ,IAAAA,QAAQ,GAAC,IAAT;AACH;;AAED,QAAMK,QAAQ,GAAG,EAAjB;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA2B;AACvBD,IAAAA,QAAQ,CAACE,IAAT,eAAc;AAAI,MAAA,GAAG,EAAED,CAAT;AAAY,MAAA,SAAS,EAAET,MAAM,CAACW,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCC,KAAK,CAACH,CAAD,CAA1C,CAAd;AACH;;AAED,QAAMI,UAAU,GAAG,EAAnB;;AACA,OAAI,IAAIJ,CAAC,GAAG,EAAZ,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA4B;AACxBI,IAAAA,UAAU,CAACH,IAAX,eAAgB;AAAI,MAAA,GAAG,EAAED,CAAT;AAAY,MAAA,SAAS,EAAET,MAAM,CAACW,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCC,KAAK,CAACH,CAAD,CAA1C,CAAhB;AACH;;AAID,SACIN,QAAQ,gBACN;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAED,MAAM,CAACc,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,QADL,CADA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,UADL,CAJA,CADJ,CADF,CADM,gBAaN;AAAK,IAAA,SAAS,EAAEb,MAAM,CAACe,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADF,CAdN;AAoBH,CA/CD;;AAiDA,eAAed,QAAf","sourcesContent":["import React from 'react'\nimport styles from './HoursBar.module.css'\n\nconst HoursBar = props => {\n\n\n    const forecast = []\n\n    if(props.activeDay === 0){\n        forecast=props.forecast.today\n    }else if(props.activeDay === 1){\n        forecast=props.forecast.tomorrow\n    }else if(props.activeDay === 2){\n        forecast=props.forecast.afterDay\n    }else{\n        forecast=null\n    }\n\n    const dayCells = []\n    for(let i = 0; i < 12; i++){\n        dayCells.push(<td key={i} className={styles.Hour}>{hours[i]}</td>)\n    }\n    \n    const nightCells = []\n    for(let i = 12; i < 24; i++){\n        nightCells.push(<td key={i} className={styles.Hour}>{hours[i]}</td>)\n    }\n    \n    \n\n    return(\n        forecast\n        ? <div className={styles.HoursBar}>\n            <table className={styles.Table}>\n                <tbody>\n                <tr>\n                    {dayCells}\n                </tr>\n                <tr>\n                    {nightCells}\n                </tr>\n                </tbody>\n            </table>\n         </div>\n        : <div className={styles.HoursBarHidden}>\n            <h2>Hourly forecast is not avaible for now</h2>\n         </div>\n        \n    )\n    \n}\n\nexport default HoursBar"]},"metadata":{},"sourceType":"module"}