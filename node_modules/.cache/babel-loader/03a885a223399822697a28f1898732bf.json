{"ast":null,"code":"var _jsxFileName = \"/home/alucard/VSProjects/weather/src/components/HoursBar.js\";\nimport React from 'react';\nimport styles from './HoursBar.module.css';\n\nconst HoursBar = props => {\n  let forecast = [];\n  let forecastType;\n\n  if (props.activeDay === 0) {\n    forecast = props.forecast.hourly.today;\n    forecastType = \"today\";\n  } else if (props.activeDay === 1) {\n    forecast = props.forecast.hourly.tomorrow;\n    forecastType = \"tomorrow\";\n  } else if (props.activeDay === 2) {\n    forecast = props.forecast.hourly.afterDay;\n    forecastType = \"afterDay\";\n  } else {\n    forecast = null;\n  }\n\n  const dayCells = [];\n  const nightCells = [];\n\n  for (let i = 0; i < 12; i++) {\n    dayCells.push( /*#__PURE__*/React.createElement(\"td\", {\n      key: i,\n      className: styles.Hour,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, forecast[i] ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 27\n      }\n    }, i, \":00\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }\n    }), forecast[i].temp.toFixed(0), \" C\") : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 27\n      }\n    }, i, \":00\")));\n  }\n\n  for (let i = 12; i < 24; i++) {\n    nightCells.push( /*#__PURE__*/React.createElement(\"td\", {\n      key: i,\n      className: styles.Hour,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, forecast[i] ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 27\n      }\n    }, i, \":00\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }), forecast[i].temp.toFixed(0), \" C\") : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 27\n      }\n    }, i, \":00\")));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.HoursBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: styles.Table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, dayCells), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, nightCells))));\n};\n\nexport default HoursBar;","map":{"version":3,"sources":["/home/alucard/VSProjects/weather/src/components/HoursBar.js"],"names":["React","styles","HoursBar","props","forecast","forecastType","activeDay","hourly","today","tomorrow","afterDay","dayCells","nightCells","i","push","Hour","temp","toFixed","Table"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAEtB,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,YAAJ;;AAEA,MAAGF,KAAK,CAACG,SAAN,KAAoB,CAAvB,EAAyB;AACrBF,IAAAA,QAAQ,GAACD,KAAK,CAACC,QAAN,CAAeG,MAAf,CAAsBC,KAA/B;AACAH,IAAAA,YAAY,GAAC,OAAb;AACH,GAHD,MAGM,IAAGF,KAAK,CAACG,SAAN,KAAoB,CAAvB,EAAyB;AAC3BF,IAAAA,QAAQ,GAACD,KAAK,CAACC,QAAN,CAAeG,MAAf,CAAsBE,QAA/B;AACAJ,IAAAA,YAAY,GAAC,UAAb;AACH,GAHK,MAGA,IAAGF,KAAK,CAACG,SAAN,KAAoB,CAAvB,EAAyB;AAC3BF,IAAAA,QAAQ,GAACD,KAAK,CAACC,QAAN,CAAeG,MAAf,CAAsBG,QAA/B;AACAL,IAAAA,YAAY,GAAC,UAAb;AACH,GAHK,MAGD;AACDD,IAAAA,QAAQ,GAAC,IAAT;AACH;;AAED,QAAMO,QAAQ,GAAG,EAAjB;AACA,QAAMC,UAAU,GAAG,EAAnB;;AAEI,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA2B;AACvBF,IAAAA,QAAQ,CAACG,IAAT,eACI;AAAI,MAAA,GAAG,EAAED,CAAT;AAAY,MAAA,SAAS,EAAEZ,MAAM,CAACc,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQX,QAAQ,CAACS,CAAD,CAAR,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,CADH,sBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGT,QAAQ,CAACS,CAAD,CAAR,CAAYG,IAAZ,CAAiBC,OAAjB,CAAyB,CAAzB,CAHH,OADF,gBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,CADH,QARV,CADJ;AAeH;;AAED,OAAI,IAAIA,CAAC,GAAG,EAAZ,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA4B;AACxBD,IAAAA,UAAU,CAACE,IAAX,eACI;AAAI,MAAA,GAAG,EAAED,CAAT;AAAY,MAAA,SAAS,EAAEZ,MAAM,CAACc,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQX,QAAQ,CAACS,CAAD,CAAR,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,CADH,sBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGT,QAAQ,CAACS,CAAD,CAAR,CAAYG,IAAZ,CAAiBC,OAAjB,CAAyB,CAAzB,CAHH,OADF,gBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,CADH,QARV,CADJ;AAgBH;;AAKL,sBACI;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAED,MAAM,CAACiB,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,QADL,CADA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,UADL,CAJA,CADJ,CADJ,CADJ;AAiBH,CA9ED;;AAgFA,eAAeV,QAAf","sourcesContent":["import React from 'react'\nimport styles from './HoursBar.module.css'\n\nconst HoursBar = props => {\n\n    let forecast = []\n    let forecastType\n\n    if(props.activeDay === 0){\n        forecast=props.forecast.hourly.today\n        forecastType=\"today\"\n    }else if(props.activeDay === 1){\n        forecast=props.forecast.hourly.tomorrow\n        forecastType=\"tomorrow\"\n    }else if(props.activeDay === 2){\n        forecast=props.forecast.hourly.afterDay\n        forecastType=\"afterDay\"\n    }else{\n        forecast=null\n    }\n\n    const dayCells = []\n    const nightCells = []\n\n        for(let i = 0; i < 12; i++){\n            dayCells.push(\n                <td key={i} className={styles.Hour}>\n                    {\n                        forecast[i]\n                        ? <div>\n                            {i}:00\n                            <br/>\n                            {forecast[i].temp.toFixed(0)} C\n                        </div> \n                        : <div>\n                            {i}:00\n                        </div>\n                    }\n                </td>\n            )\n        }\n\n        for(let i = 12; i < 24; i++){\n            nightCells.push(\n                <td key={i} className={styles.Hour}>\n                    {\n                        forecast[i]\n                        ? <div>\n                            {i}:00\n                            <br/>\n                            {forecast[i].temp.toFixed(0)} C\n                          </div>\n                        : <div>\n                            {i}:00\n                          </div> \n                        \n                    }\n                </td>\n            )\n        }\n\n\n\n\n    return(\n        <div className={styles.HoursBar}>\n            <table className={styles.Table}>\n                <tbody>\n                <tr>\n                    {dayCells}\n                </tr>\n                <tr>\n                    {nightCells}\n                </tr>\n                </tbody>\n            </table>\n        </div>\n        \n        \n    )\n    \n}\n\nexport default HoursBar"]},"metadata":{},"sourceType":"module"}